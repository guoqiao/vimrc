# Use vim keybindings in copy mode
set -g mode-keys vi
set -g mouse on

# Ctrl + arrows to move around, no need for prefix
bind -n C-Left select-pane -L
bind -n C-Right select-pane -R
bind -n C-Up select-pane -U
bind -n C-Down select-pane -D

# In the meanwhile, use prefix + arrows to resize panes
# You can press Ctrl + b, hold Ctrl, then press arrows multiple times to adjust size.

# Additional vim way to move around
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Additional vim way to resize pane
bind -r ^k resizep -U 10
bind -r ^j resizep -D 10
bind -r ^h resizep -L 10
bind -r ^l resizep -R 10

# set fish as your default Tmux shell
# You need to install fish and make sure the path is right for you
set-option -g default-shell /usr/bin/fish

# Tmux should be pretty, we need 256 color for that
set -g default-terminal "screen-256color"

# Tmux uses a 'control key', let's set it to 'Ctrl-a'
# Reason: 'Ctrl-a' is easier to reach than 'Ctrl-b'
# set -g prefix C-a
# unbind C-b

# command delay? We don't want that, make it short
set -sg escape-time 1

# Allow us to reload our Tmux configuration while using Tmux
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Getting interesting now, we use the vertical and horizontal
# symbols to split the screen
bind | split-window -h
bind - split-window -v

# start selecting text typing 'v' key (once you are in copy mode)
bind-key -t vi-copy 'v' begin-selection
# copy selected text to the system's clipboard
bind-key -t vi-copy 'y' copy-selection

