" plugins configure

" colorscheme gruvbox
" colorscheme badwolf
colorscheme molokai
let g:lightline = {'colorscheme': 'molokai'}

let g:NERDTreeDirArrows=0
let g:NERDTreeChDirMode=2
let g:NERDTreeRemoveFileCmd="mv -t /tmp/ "
let g:NERDTreeRemoveDirCmd="mv -t /tmp/ "
" let NERDTreeIgnore = ['\.pyc$']
noremap tt :NERDTreeToggle<CR>
noremap ff :NERDTreeFind<CR>

let NERDSpaceDelims = 1  " add space after comment delim for pep8
" For same reason vim registers <C-/> as <C-_>
noremap <C-_> :call NERDComment(0, "toggle")<cr>

noremap TT :TagbarToggle<CR>
let g:tagbar_autofocus = 1
let g:tagbar_autoclose = 1
let g:tagbar_foldlevel = 0

let g:yankring_history_dir='/tmp/'
let g:yankring_min_element_length=4
" no <C-P>
let g:yankring_replace_n_pkey = '<C-M>'
noremap <leader>y :YRShow<CR>

let g:ctrlp_map = '<C-P>'
let g:ctrlp_cmd = 'CtrlP'
let g:ctrlp_tabpage_position  = 'a'
let g:ctrlp_working_path_mode = 'r'
let g:ctrlp_user_command = ['.git', 'cd %s && git ls-files . --cached --others --exclude-standard', 'find %s -type f']

" jedi-vim
" <leader>g: goto
" <leader>d: goto definitions
" <leader>r: rename
" <leader>n: usage
" K: doc
let g:jedi#auto_initialization = 1
let g:jedi#auto_vim_configuration = 1

" do not enable it by default, it will be very slow
let g:jedi#popup_on_dot = 0
" show doc on demand, default: K
let g:jedi#documentation_command = "<leader>k"
" where to show, left|right|top|bottom|winwidth
" let g:jedi#use_splits_not_buffers = "winwidth"
" open a module in vim
" :Pyimport os.path

" goto_definnitions first, fallback to goto_assignments for builtin
let g:jedi#goto_command = "<leader>g"
let g:jedi#goto_definitions_command = "<leader>d"
let g:jedi#goto_assignments_command = "<leader>a"

let g:jedi#rename_command = "<leader>r"
let g:jedi#usages_command = "<leader>n"

let g:jedi#completions_enabled = 0
" let g:jedi#completions_command = "<Tab>"
let g:jedi#popup_select_first = 1
" close autocomplete item docstring preview window while leaving insert mode
let g:jedi#auto_close_doc = 1

" show function call signatures in insert mode in real time, very helpful
let g:jedi#show_call_signatures = 1
" from foo<space> add import and trigger popup
let g:jedi#smart_auto_mappings = 1

" ale: Asynchronous Lint Engine
" let g:ale_fixers = {'python': ['black']}
" let g:ale_fix_on_save = 0

" https://github.com/dense-analysis/ale/tree/master/ale_linters/python
" for ansible_lint, add `# vi: ft=ansible.yaml` in file
let g:ale_linters = {
\    'python': ['pyflakes'],
\    'yaml': ['yamllint'],
\    'dockerfile': ['hadolint'],
\    'make': ['checkmake'],
\    'ansible': ['ansible_lint'],
\}
" let g:ale_linters_explicit = 0
" let g:ale_lint_on_enter = 1
" let g:ale_lint_on_text_changed = 'never'
" let g:ale_lint_on_insert_leave = 1
let g:ale_lint_on_save = 1

let g:ale_sign_column_always = 1
" let g:airline#extensions#ale#enabled = 1
let g:ale_echo_msg_format = '[ALE][%severity%][%linter%] %s'

" SuperTab
let g:SuperTabDefaultCompletionType = "context"


" vim-gh-line
" let g:gh_trace = 1
let g:gh_line_map = '<leader>gh'
let g:gh_line_blame_map = '<leader>gb'
let g:gh_repo_map = '<leader>go'


" vim-terraform
" https://github.com/hashivim/vim-terraform/blob/master/doc/terraform.txt
let g:terraform_align = 0
let g:terraform_fmt_on_save = 0

" indentLine
" https://github.com/Yggdroot/indentLine
let g:indentLine_char_list = ['|', '¦', '┆', '┊']
