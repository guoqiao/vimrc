" Vundle is used here to manage packages:
" https://github.com/VundleVim/Vundle.vim
"
" Brief help
" :PluginList          - list configured bundles
" :PluginInstall(!)    - install (update) bundles
" :PluginSearch(!) foo - search (or refresh cache first) for foo
" :PluginClean(!)      - confirm (or auto-approve) removal of unused bundles
"
" see :h vundle for more details or wiki for FAQ
" NOTE: comments after Plugin commands are not allowed.

set nocompatible              " be iMproved
filetype off                  " required!

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'VundleVim/Vundle.vim'  " let Vundle manage Vundle, required!
Plugin 'matchit.zip' " % to match
Plugin 'repeat.vim' " . to repeat
Plugin 'surround.vim'
Plugin 'molokai'
Plugin 'colorizer'  " show color for css
Plugin 'python.vim'
Plugin 'vim-autopep8'  " F8 to format
Plugin 'vim-airline/vim-airline'
Plugin 'michaeljsmith/vim-indent-object'

" Async lint engine
Plugin 'w0rp/ale'
let g:ale_sign_column_always = 1

Plugin 'mattn/emmet-vim'  " Ctrl + y + ,
Plugin 'tpope/vim-fugitive'

Plugin 'easymotion/vim-easymotion'  " leader + leader + w
Plugin 'bronson/vim-trailing-whitespace'  " :FixWhitespace

Plugin 'The-NERD-tree'
let g:NERDTreeDirArrows=0
let g:NERDTreeChDirMode=2
let NERDTreeIgnore=['\.pyc$', '\~$'] "ignore files in NERDTree
map tt :NERDTreeToggle<CR>
map ff :NERDTreeFind<CR>

" <leader> p to show paste history
Plugin 'YankRing.vim'
let yankring_min_element_length=4
" leader can be mapped later
noremap <leader>p :YRShow<CR>

Plugin 'The-NERD-Commenter'  " leader + c + i to toggle comment
let NERDSpaceDelims = 1  " add space after comment delim for pep8
" For same reason vim registers <C-/> as <C-_>
noremap <C-_> :call NERDComment(0, "toggle")<cr>

Plugin 'airblade/vim-gitgutter'

Plugin 'majutsushi/tagbar'
map TT :TagbarToggle<CR>
let g:tagbar_autofocus = 1
let g:tagbar_autoclose = 1
let g:tagbar_foldlevel = 0

Plugin 'ctrlpvim/ctrlp.vim'  " ctrl + p to search
let g:ctrlp_cmd = 'CtrlPMixed'
let g:ctrlp_tabpage_position  = 'a'
let g:ctrlp_working_path_mode = 'r'

if executable('ag')

    set grepprg=ag\ --nogroup\ --nocolor\ --column
    set grepformat=%f:%l:%c%m

    let g:ctrlp_use_caching = 0
    let g:ctrlp_user_command = 'ag %s --nogroup --hidden
          \ --ignore bin
          \ --ignore .git
          \ --ignore .DS_Store
          \ --ignore __pycache__
          \ --ignore "**/*.pyc"
          \ -g ""'
endif

Plugin 'SirVer/ultisnips'
Plugin 'guoqiao/vim-snippets'

" Trigger configuration. Do not use <tab> if you use https://github.com/Valloric/YouCompleteMe.
let g:UltiSnipsUsePythonVersion = 3
let g:UltiSnipsExpandTrigger="<c-h>"
let g:UltiSnipsJumpForwardTrigger="<c-b>"
let g:UltiSnipsJumpBackwardTrigger="<c-z>"

" If you want :UltiSnipsEdit to split your window.
let g:UltiSnipsEditSplit="vertical"

Plugin 'Valloric/YouCompleteMe'
let g:ycm_python_binary_path = 'python'
let g:ycm_server_keep_logfiles = 1
let g:ycm_server_log_level = 'debug'
let g:ycm_filetype_whitelist = { 'python':1 }
let g:ycm_autoclose_preview_window_after_completion=1
let g:ycm_confirm_extra_conf = 0
let g:ycm_use_ultisnips_completer = 1
nnoremap <leader>j :YcmCompleter GoToDefinition<CR>
nnoremap <C-J> :YcmCompleter GoToDefinition<CR>

call vundle#end()

filetype plugin indent on     " required!
